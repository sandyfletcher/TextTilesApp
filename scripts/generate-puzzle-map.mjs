// scripts/generate-puzzle-map.mjs

import fs from 'fs/promises';
import path from 'path';

const MANIFEST_PATH = './assets/puzzles/puzzles.json';
const OUTPUT_PATH = './services/puzzle-map.tsx';

async function generatePuzzleMap() {
  console.log('üó∫Ô∏è  Generating puzzle map...');
  try {
    const manifestContent = await fs.readFile(MANIFEST_PATH, 'utf8');
    const manifest = JSON.parse(manifestContent);

    let mapContent = `// This file is generated by scripts/generate-puzzle-map.mjs. DO NOT EDIT.\n\n`;
    mapContent += `import { Puzzle } from '../types';\n\n`;
    mapContent += `export const puzzleMap: Record<string, () => Promise<{ default: Puzzle }>> = {\n`;

    for (const puzzle of manifest) {
      // Note the relative path from the output file to the asset
      const relativePath = path.join('../assets/puzzles', puzzle.path).replace(/\\/g, '/');
      mapContent += `  '${puzzle.id}': () => import('${relativePath}'),\n`;
    }

    mapContent += `};\n`;

    await fs.writeFile(OUTPUT_PATH, mapContent);
    console.log(`‚úÖ Success! Puzzle map generated with ${manifest.length} entries.`);
    console.log(`   Saved to: ${OUTPUT_PATH}`);

  } catch (error) {
    console.error('‚ùå Error generating puzzle map:', error);
    process.exit(1);
  }
}

generatePuzzleMap();